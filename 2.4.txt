using System;

public class RomanToIntegerConverter
{
    public static int Convert(string romanNumeral)
    {
        int result = 0;

        for (int i = 0; i < romanNumeral.Length; i++)
        {
            int currentDigitValue = GetDigitValue(romanNumeral[i]);

            if (i + 1 < romanNumeral.Length)
            {
                int nextDigitValue = GetDigitValue(romanNumeral[i + 1]);

                if (currentDigitValue < nextDigitValue)
                {
                    result -= currentDigitValue;
                }
                else
                {
                    result += currentDigitValue;
                }
            }
            else
            {
                result += currentDigitValue;
            }
        }

        return result;
    }

    private static int GetDigitValue(char digit)
    {
        switch (digit)
        {
            case 'I':
                return 1;
            case 'V':
                return 5;
            case 'X':
                return 10;
            case 'L':
                return 50;
            case 'C':
                return 100;
            case 'D':
                return 500;
            case 'M':
                return 1000;
            default:
                throw new ArgumentException("Invalid roman numeral digit");
        }
    }
    static void Main()
    {
        string romanNumeral = "XXVII";
        int number = RomanToIntegerConverter.Convert(romanNumeral);

        Console.WriteLine($"Roman number {romanNumeral} is equal to {number}");
    }
}